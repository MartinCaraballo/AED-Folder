UT2_PD5
	Ejercicio 2:

		public static <AnyType extends Comparable<? super AnyType>>
				int binarySearch(AnyType[] a, AnyType x) {
			int low = 0; 			O(1)
			int high = a.length - 1;	O(1)
			int mid;			O(1)
			
			while (low <= high) {		--> se repite n veces, el orden de ejecucion es de log(n)
				mid = (low + high) / 2;			O(1)
				if (a[mid].compareTo(x) < 0)		O(1)
					low = mid + 1;			O(1)
				else if (a[mid].compareTo(x) > 0)	O(1)
					high = mid - 1;			O(1)
				else				
					return mid;			O(1)
			}

			return NOT_FOUND; // NOT_FOUND = -1		O(1)
		}
	
	El orden de ejecuci√≥n del algoritmo es O(log(n)) (ya que se va "partiendo" a la mitad).