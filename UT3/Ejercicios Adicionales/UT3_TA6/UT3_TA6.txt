Lenguaje natural -> Empezamos con una pila vacia, si encontramos un corchete abierto insertamos un número
                    o cualquier tipo de dato a la pila, y cuando encontramos un corchete cerrado hacemos
                    pop en la pila. Al terminar devuelvo si la pila esta vacia, es decir que si esta vacia
                    retornará  true y en caso contrario false. Si al momento de hacer pop, la pila esta vacia,
                    devolver false. En caso de que nos encontremos con una letra, la ignoramos.

Precondiciones ->   Tener una pila vacia con los metodos de push, pop, y estaVacia.
                    Tener como entrada una lista de caracteres, que sera lo que nuestro algoritmo leerá.

Postcondiciones ->  Debe devolver true o false, dependiendo de si la pila esta vacia o no, correspondiendo a si
                    la secuencia de corchetes es correcta o no.
                    La pila debe quedar vacia o si la entrada es incorrecta con almenos un elemento.

controlCorchetes(entrada : lista de char) : booleano
COM
    Pila pila <- nueva Pila                             O(1)
    Nodo nodoActual <- entrada.primero                  O(1)
    Mientras nodoActual <> nulo hacer   -> se repite n veces
        Si no esLetra entonces                          O(1)
            Si es corcheteAbiero entonces               O(1)
                pila.push(1)                            O(1)
            Si no si es corcheteCerrado entonces        O(1)
                Si pila.esVacia entonces                O(1)
                    devolver falso                      O(1)
                Si no
                    pila.pop                            O(1)
                Fin si
            Fin si
        Fin si
    Fin Mientras
    devoler pila.esVacia                                O(1)
FIN

El orden de ejecución de este algoritmo es O(n).